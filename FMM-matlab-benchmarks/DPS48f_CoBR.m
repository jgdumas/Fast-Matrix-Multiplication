function M = DPS48f_CoBR(A, nmin, peeling, level)
NTH2ROOT2once=nthroot(2,2);
NTH2ROOT2o2=nthroot(2,2)/2;
NTH2ROOT2t2o=2/nthroot(2,2);
NTH2ROOT2t1o=1/nthroot(2,2);
NTH2ROOT2o4=nthroot(2,2)/4;
NTH2ROOT2o8=nthroot(2,2)/8;
NTH2ROOT2o16=nthroot(2,2)/16;
NTH2ROOT2o3=nthroot(2,2)/3;
NTH2ROOT2f2o3=nthroot(2,2)*2/3;

  if nargin < 2, nmin = 4; end    % Threshold to conventional
  if nargin < 3, peeling = 1; end % Static (1) or Dynamic (2) peeling
  if nargin < 4, level = 8; end   % Verbose level
[m,n] = size(A);
if (m<=nmin)||(n<=nmin)||(m<4)||(n<4)
   M=A;
else
[m,n] = size(A);
m0 = 0; m1 = 1*m/4; m2 = 2*m/4; m3 = 3*m/4; m4 = m;
 r0 = m0+1:m1; r1 = m1+1:m2; r2 = m2+1:m3; r3 = m3+1:m4;
n0 = 0; n1 = 1*n/4; n2 = 2*n/4; n3 = 3*n/4; n4 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4;
tA0 = A(r0,c0);
tA1 = A(r0,c1);
tA2 = A(r0,c2);
tA3 = A(r0,c3);
tA4 = A(r1,c0);
tA5 = A(r1,c1);
tA6 = A(r1,c2);
tA7 = A(r1,c3);
tA8 = A(r2,c0);
tA9 = A(r2,c1);
tA10 = A(r2,c2);
tA11 = A(r2,c3);
tA12 = A(r3,c0);
tA13 = A(r3,c1);
tA14 = A(r3,c2);
tA15 = A(r3,c3);


iM0 = DPS48f_CoBR( tA0, nmin, peeling, level);
iM1 = DPS48f_CoBR( tA1, nmin, peeling, level);
iM2 = DPS48f_CoBR( tA2, nmin, peeling, level);
iM3 = DPS48f_CoBR( tA3, nmin, peeling, level);
iM4 = DPS48f_CoBR( tA4, nmin, peeling, level);
iM5 = DPS48f_CoBR( tA5, nmin, peeling, level);
iM6 = DPS48f_CoBR( tA6, nmin, peeling, level);
iM7 = DPS48f_CoBR( tA7, nmin, peeling, level);
iM8 = DPS48f_CoBR( tA8, nmin, peeling, level);
iM9 = DPS48f_CoBR( tA9, nmin, peeling, level);
iM10 = DPS48f_CoBR( tA10, nmin, peeling, level);
iM11 = DPS48f_CoBR( tA11, nmin, peeling, level);
iM12 = DPS48f_CoBR( tA12, nmin, peeling, level);
iM13 = DPS48f_CoBR( tA13, nmin, peeling, level);
iM14 = DPS48f_CoBR( tA14, nmin, peeling, level);
iM15 = DPS48f_CoBR( tA15, nmin, peeling, level);
t16 = iM6+iM7;
t17 = iM2+iM3;
t18 = iM0-iM13;
t19 = iM1+iM12;
t21 = iM2-iM3;
r22 = iM5*NTH2ROOT2o2;
r23 = iM9*NTH2ROOT2o2;
t23 = iM15-r22+r23;
t25 = iM10-iM11;
t26 = iM6-iM7;
t27 = iM14-iM4*NTH2ROOT2o2-iM8*NTH2ROOT2o2;
r28 = (t18-t19)*NTH2ROOT2o2;
t28 = t16+r28;
t29 = t21+t26;
t30 = t17-t16;
t36 = t25+r28;
t37 = t25-iM13*NTH2ROOT2once;
t38 = t23+t27;
t40 = iM15+iM9*NTH2ROOT2once-iM14;
t41 = t21-t26;
t43 = t23-t27;
t44 = t16+t17;
t45 = t17+(iM4-iM8)*NTH2ROOT2o2-r23-r22;
r47 = (iM1-iM5)*NTH2ROOT2once;
r48 = (iM0+iM4)*NTH2ROOT2once;
r49 = (iM0-iM4)*NTH2ROOT2once;
r50 = (iM1+iM5)*NTH2ROOT2once;
oM4 = r50-t29;
oM6 = t41+r49;
oM7 = t30+r47;
oM9 = t38-t28;
oM14 = t37+t40;
oM15 = t44-r50;
oM17 = t43-t36;
oM24 = r48-t29;
oM26 = -t36-t43;
oM27 = iM10+iM11+t38-(t18+t19)*NTH2ROOT2o2;
oM30 = t41+r47;
oM31 = r49-t30;
oM33 = t45-t28;
oM35 = t40-t37;
oM37 = t28+t45;
oM43 = t44+r48;
v47 = oM14+oM24;
v48 = oM35-oM6;
v49 = oM9-oM33;
g50 = v47/2;
v50 = oM26+g50;
g51 = v48/2;
v51 = oM17-g51;
v52 = oM37-oM27;
oM1 = v50+g51;
oM46 = v51+g50;
v55 = oM37-oM15;
oM34 = v49+oM37;
oM16 = v52+oM9;
g58 = v51*2;
oM22 = oM27-v49;
v60 = v50-g51;
oM29 = oM26+v47;
v62 = oM17-oM35;
v63 = oM4-oM29;
v64 = oM14+oM26;
v65 = oM33-oM7;
v67 = v48+oM30-oM17;
v68 = oM31+oM33;
v69 = v52+oM9*2;
v70 = oM43-oM37;
g71 = (v47-g58)/2;
oM11 = oM22+v64;
oM18 = -g71;
oM21 = oM34+v63;
oM23 = oM4-v50*2;
oM13 = oM22-v67;
oM8 = v62-oM16;
oM19 = v60-v68;
oM2 = oM34+v62;
oM10 = -v68-g71;
oM40 = -v60;
oM3 = oM9-v64;
oM5 = g58-oM30;
oM41 = oM43-v52;
oM32 = v70-oM46;
oM12 = v70-oM1;
oM38 = v55-g71;
oM25 = v67-oM9;
oM42 = v55-v60;
oM0 = oM7-v69;
oM39 = oM27+v55;
oM36 = oM1-v65;
oM44 = oM16+v63;
oM20 = oM46+v65;
oM28 = v49*2+v52-oM31;
oM45 = v69-oM33;

M = [ oM0 ; oM1 ; oM2 ; oM3 ; oM4 ; oM5 ; oM6 ; oM7 ; oM8 ; oM9 ; oM10 ; oM11 ; oM12 ; oM13 ; oM14 ; oM15 ; oM16 ; oM17 ; oM18 ; oM19 ; oM20 ; oM21 ; oM22 ; oM23 ; oM24 ; oM25 ; oM26 ; oM27 ; oM28 ; oM29 ; oM30 ; oM31 ; oM32 ; oM33 ; oM34 ; oM35 ; oM36 ; oM37 ; oM38 ; oM39 ; oM40 ; oM41 ; oM42 ; oM43 ; oM44 ; oM45 ; oM46 ] ;
end

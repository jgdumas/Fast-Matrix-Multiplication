function C = DPS48o_4_4_4(A, B, nmin, peeling, level)
NTH2ROOT2once=nthroot(2,2);
NTH2ROOT2o2=nthroot(2,2)/2;
NTH2ROOT2t2o=2/nthroot(2,2);
NTH2ROOT2t1o=1/nthroot(2,2);
NTH2ROOT2o4=nthroot(2,2)/4;
NTH2ROOT2o8=nthroot(2,2)/8;
NTH2ROOT2o16=nthroot(2,2)/16;
NTH2ROOT2o3=nthroot(2,2)/3;
NTH2ROOT2f2o3=nthroot(2,2)*2/3;

if nargin < 3, nmin = 4; end    % Threshold to conventional
if nargin < 4, peeling = 1; end % Static (1) or Dynamic (2) peeling
if nargin < 5, level = 8; end   % Verbose level
[m,k] = size(A); [k2,n] = size(B);
if (k2 ~= k), error('Incompatible matrix dimensions.'); end
% Recursively cuts into nmin*4^l x nmin*4^l x nmin*4^l blocks, with decreasing maximal l
if (m<=nmin)||(k<=nmin)||(n<=nmin)||(m<4)||(k<4)||(n<4)
  % fprintf("# MM Direct: %d x %d x %d\n",m,k,n)
  C = A*B;
else
  C = zeros(m,n);
  mu=m-rem(m,4);ku=k-rem(k,4);nu=n-rem(n,4);
  l=ceil(min([log(mu)/log(4),log(ku)/log(4),log(nu)/log(4)]));
  if (peeling == 1)
    l = min([floor(log(m/nmin)/log(4)),floor(log(k/nmin)/log(4)),floor(log(n/nmin)/log(4))]);
    mu=nmin*4^l; ku=nmin*4^l; nu=nmin*4^l;
  end
  if (mu < m) || (ku < k) || (nu < n)
    % fprintf("# Core SubMatrix[%d]: %d x %d x %d\n",l,mu,ku,nu)
    C(1:mu,1:nu)=DPS48o_4_4_4(A(1:mu,1:ku),B(1:ku,1:nu),nmin, peeling, level);
    if (m > mu)
      % fprintf("# MM peel m: %d x %d x %d\n",m-mu,k,n)
      C(mu+1:m,1:n)=C(mu+1:m,1:n)+DPS48o(A(mu+1:m,1:k),B,nmin, peeling, level);
    end
    if (k > ku) && (mu > 0) && (nu > 0)
      % fprintf("# MM peel k: %d x %d x %d\n",mu,k-ku,nu)
      C(1:mu,1:nu)=C(1:mu,1:nu)+DPS48o(A(1:mu,ku+1:k),B(ku+1:k,1:nu),nmin, peeling, level);
    end
    if (n > nu) && (mu > 0)
      % fprintf("# MM peel n: %d x %d x %d\n",mu,k,n-nu)
      C(1:mu,nu+1:n)=C(1:mu,nu+1:n)+DPS48o(A(1:mu,1:k),B(1:k,nu+1:n),nmin, peeling, level);
    end
  else
    if l>=level, fprintf("# Core<4;4;4>[%d]: %d x %d x %d\n",l,m,k,n); end

[m,n] = size(A);
m0 = 0; m1 = 1*m/4; m2 = 2*m/4; m3 = 3*m/4; m4 = m;
 r0 = m0+1:m1; r1 = m1+1:m2; r2 = m2+1:m3; r3 = m3+1:m4;
n0 = 0; n1 = 1*n/4; n2 = 2*n/4; n3 = 3*n/4; n4 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4;
t16 = A(r2,c3)-A(r3,c1);
t17 = A(r0,c1)+A(r2,c0);
t18 = A(r1,c3)+A(r3,c2);
t19 = A(r0,c2)+A(r1,c0);
t20 = A(r2,c1)-A(r3,c3);
t21 = A(r0,c3)+A(r2,c2);
t22 = A(r0,c3)-A(r2,c2);
t23 = A(r0,c0)+A(r1,c2);
t24 = A(r1,c1)+A(r3,c0);
t25 = A(r1,c1)-A(r3,c0);
t26 = t16+t19;
t27 = t17+t18;
t28 = t16-t19;
t29 = t18-t17;
t30 = A(r0,c1)-A(r2,c0);
t31 = A(r2,c3)+A(r3,c1);
t32 = A(r1,c3)-A(r3,c2);
t33 = t23-t20;
t34 = A(r1,c0)-A(r0,c2);
t37 = t20+t23;
t38 = A(r2,c1)+t23+A(r3,c3);
t39 = A(r1,c2)-A(r0,c0)-t20;
t40 = t21-t25;
t41 = t24-t21;
t42 = t22+t28;
t43 = t22-t25;
t44 = t24+t21;
t45 = t22-t28;
t46 = t25+t22;
t47 = t21+t25;
t48 = t37-t17;
t49 = t16+t39;
t50 = t19+t38;
t51 = t33-t30;
t52 = t19-t38;
t53 = t39-t16;
t54 = t17+t37;
t55 = t30+t33;
oA43 = t24+t42;
oA11 = t26+t40;
oA27 = t43+t29;
oA14 = t26-t47;
oA33 = t27-t44;
oA8 = t27-t46;
oA21 = t24-t42;
oA37 = t26+t47;
oA31 = t40-t26;
oA34 = t27+t46;
oA39 = t41+t29;
oA3 = t41-t29;
oA24 = t29-t43;
oA47 = t24+t45;
oA16 = t27+t44;
oA18 = t45-t24;
t72 = t49-t34;
t73 = t18-t55;
t74 = t48-t32;
t75 = t53+t34;
t76 = t18+t51;
t77 = t32+t54;
t78 = t32+t48;
t79 = t53-t34;
t80 = t51-t18;
t81 = t31+t50;
t82 = t32-t54;
t83 = t18+t55;
t84 = t49+t34;
t85 = t50-t31;
t86 = t31+t52;
t87 = t31-t52;
oA0 = oA27+t85;
oA1 = t75-oA39;
oA2 = t74-oA14;
oA4 = t87-oA24;
oA5 = oA18-t78;
oA6 = oA47-t83;
oA7 = oA21+t82;
oA9 = t80-oA43;
oA10 = t73-oA31;
oA12 = oA43+t80;
oA13 = t72+oA3;
oA15 = t76-oA11;
oA17 = t78+oA18;
oA19 = t73+oA31;
oA20 = oA33+t86;
oA22 = oA37-t77;
oA23 = oA8-t84;
oA25 = t85-oA27;
oA26 = oA16+t81;
oA28 = oA8+t84;
oA29 = oA3-t72;
oA30 = oA39+t75;
oA32 = t87+oA24;
oA35 = oA21-t82;
oA36 = oA37+t77;
oA38 = oA47+t83;
oA40 = oA11+t76;
oA41 = oA33-t86;
oA42 = oA14+t74;
oA44 = oA34+t79;
oA45 = oA34-t79;
oA46 = t81-oA16;

[m,n] = size(B);
m0 = 0; m1 = 1*m/4; m2 = 2*m/4; m3 = 3*m/4; m4 = m;
 r0 = m0+1:m1; r1 = m1+1:m2; r2 = m2+1:m3; r3 = m3+1:m4;
n0 = 0; n1 = 1*n/4; n2 = 2*n/4; n3 = 3*n/4; n4 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4;
t16 = B(r0,c2)-B(r0,c3);
t17 = B(r2,c2)-B(r2,c3);
t18 = B(r0,c0)-B(r2,c0);
t19 = B(r3,c0)+B(r3,c1);
t20 = B(r0,c1)-B(r2,c1);
t21 = B(r0,c0)+B(r2,c0);
t22 = B(r0,c1)+B(r2,c1);
t23 = B(r0,c2)+B(r0,c3);
t24 = B(r2,c2)+B(r2,c3);
t25 = B(r3,c2)+B(r3,c3);
t27 = B(r1,c2)+B(r1,c3);
t28 = t16+t17;
t29 = t16-t17;
t30 = t24-t23;
t33 = t25-B(r1,c0)*NTH2ROOT2once;
t35 = B(r1,c3)-B(r1,c2)-B(r3,c1)*NTH2ROOT2once;
t36 = t23+t24;
r38 = (B(r1,c0)+B(r1,c1))*NTH2ROOT2o2;
t38 = t25-r38;
t41 = B(r3,c2)-B(r3,c3)+B(r1,c1)*NTH2ROOT2once;
t42 = t27-B(r3,c0)*NTH2ROOT2once;
r43 = t18*NTH2ROOT2once;
r44 = t20*NTH2ROOT2once;
r45 = t21*NTH2ROOT2once;
r46 = t22*NTH2ROOT2once;
r48 = (t21-t19-t22)*NTH2ROOT2o2;
r49 = (t20+t19-t18)*NTH2ROOT2o2;
oB0 = t42-t33;
oB1 = r46-t28;
oB3 = t29+r49-r38;
oB4 = t33+t42;
oB13 = t29-r43;
oB20 = t35+t41;
oB23 = t36-r45;
oB24 = t27+t38-r49;
oB26 = t41-t35;
oB27 = t38-r48-t27;
oB28 = t36-r46;
oB29 = t29+r44;
oB30 = t28+r45;
oB39 = r38-r48-t28;
oB44 = t30-r43;
oB45 = r44-t30;
v48 = oB0+oB28;
v49 = oB4-oB45;
v50 = oB30-oB26;
v51 = oB13-oB20;
g52 = v51/2;
v52 = oB3-g52;
g53 = v48/2;
v53 = oB27+g53;
g54 = v49/2;
v54 = oB24-g54;
g55 = v50/2;
v55 = oB39+g55;
oB8 = oB27+v48;
oB43 = v53-g54;
oB47 = v54+g53;
oB14 = v54-g53;
oB11 = g55+v52;
oB34 = oB24-v49;
oB37 = v53+g54;
oB31 = v55-g52;
oB21 = v52-g55;
oB18 = v55+g52;
v66 = oB0+oB27;
v67 = oB23-oB8;
v68 = oB29-oB3;
v69 = oB44+oB34;
v70 = oB39+oB30;
v71 = oB4-oB24;
v72 = oB3-oB13;
v73 = oB1-oB39;
oB7 = v71-oB21;
oB6 = oB47-v68;
oB19 = oB31-v67;
oB5 = oB18-v69;
oB35 = v67-oB21;
oB17 = oB18-v66;
oB38 = oB47+v70;
oB2 = oB14-v72;
oB36 = oB37+v70;
oB10 = oB31+v71;
oB9 = oB43+v73;
oB15 = oB11-v69;
oB33 = v51-oB3;
oB41 = oB29-v52*2;
oB32 = oB44+v54*2;
oB40 = oB11+v66;
oB16 = oB39+v50;
oB46 = v55*2-oB1;
oB12 = v72-oB43;
oB42 = v73-oB14;
oB22 = oB37+v68;
oB25 = v53*2-oB23;

iC0 = DPS48o( oA0, oB0, nmin, peeling, level);
iC1 = DPS48o( oA1, oB1, nmin, peeling, level);
iC2 = DPS48o( oA2, oB2, nmin, peeling, level);
iC3 = DPS48o( oA3, oB3, nmin, peeling, level);
iC4 = DPS48o( oA4, oB4, nmin, peeling, level);
iC5 = DPS48o( oA5, oB5, nmin, peeling, level);
iC6 = DPS48o( oA6, oB6, nmin, peeling, level);
iC7 = DPS48o( oA7, oB7, nmin, peeling, level);
iC8 = DPS48o( oA8, oB8, nmin, peeling, level);
iC9 = DPS48o( oA9, oB9, nmin, peeling, level);
iC10 = DPS48o( oA10, oB10, nmin, peeling, level);
iC11 = DPS48o( oA11, oB11, nmin, peeling, level);
iC12 = DPS48o( oA12, oB12, nmin, peeling, level);
iC13 = DPS48o( oA13, oB13, nmin, peeling, level);
iC14 = DPS48o( oA14, oB14, nmin, peeling, level);
iC15 = DPS48o( oA15, oB15, nmin, peeling, level);
iC16 = DPS48o( oA16, oB16, nmin, peeling, level);
iC17 = DPS48o( oA17, oB17, nmin, peeling, level);
iC18 = DPS48o( oA18, oB18, nmin, peeling, level);
iC19 = DPS48o( oA19, oB19, nmin, peeling, level);
iC20 = DPS48o( oA20, oB20, nmin, peeling, level);
iC21 = DPS48o( oA21, oB21, nmin, peeling, level);
iC22 = DPS48o( oA22, oB22, nmin, peeling, level);
iC23 = DPS48o( oA23, oB23, nmin, peeling, level);
iC24 = DPS48o( oA24, oB24, nmin, peeling, level);
iC25 = DPS48o( oA25, oB25, nmin, peeling, level);
iC26 = DPS48o( oA26, oB26, nmin, peeling, level);
iC27 = DPS48o( oA27, oB27, nmin, peeling, level);
iC28 = DPS48o( oA28, oB28, nmin, peeling, level);
iC29 = DPS48o( oA29, oB29, nmin, peeling, level);
iC30 = DPS48o( oA30, oB30, nmin, peeling, level);
iC31 = DPS48o( oA31, oB31, nmin, peeling, level);
iC32 = DPS48o( oA32, oB32, nmin, peeling, level);
iC33 = DPS48o( oA33, oB33, nmin, peeling, level);
iC34 = DPS48o( oA34, oB34, nmin, peeling, level);
iC35 = DPS48o( oA35, oB35, nmin, peeling, level);
iC36 = DPS48o( oA36, oB36, nmin, peeling, level);
iC37 = DPS48o( oA37, oB37, nmin, peeling, level);
iC38 = DPS48o( oA38, oB38, nmin, peeling, level);
iC39 = DPS48o( oA39, oB39, nmin, peeling, level);
iC40 = DPS48o( oA40, oB40, nmin, peeling, level);
iC41 = DPS48o( oA41, oB41, nmin, peeling, level);
iC42 = DPS48o( oA42, oB42, nmin, peeling, level);
iC43 = DPS48o( oA43, oB43, nmin, peeling, level);
iC44 = DPS48o( oA44, oB44, nmin, peeling, level);
iC45 = DPS48o( oA45, oB45, nmin, peeling, level);
iC46 = DPS48o( oA46, oB46, nmin, peeling, level);
iC47 = DPS48o( oA47, oB47, nmin, peeling, level);
b1 = iC33-iC39;
b4 = iC37+iC14;
b5 = iC24*2-iC32+iC4;
v71 = iC34-iC27;
b7 = iC0+iC25+iC27*2;
v66 = iC47+iC43;
v74 = iC11-iC31;
b11 = iC24+iC8;
b13 = iC41-iC33*2-iC20;
b21 = iC16+iC3;
b22 = iC46+iC16*2+iC26;
b23 = iC21-iC18;
b25 = iC26+v74;
b33 = iC19-iC10-iC31*2-b11-v71-b4;
b37 = iC6-iC47*2+iC38-b21+b23+b1;
b39 = iC25+v66;
b48 = v71-b39-b11-iC4-iC7-iC35-iC21*2;
b52 = iC41-iC37*2+iC22+iC36-b21-b1-b25;
b53 = b25-b37-iC10-b5;
b54 = iC19-iC41+v74+b7+b37;
b55 = iC4-iC38+v66+b22-b33;
b56 = b13-iC6+b39+b33;
b57 = iC22-b4+b13-b48;
b58 = iC36-b4-b22+b48;
b59 = iC7+b23+b5+b52;
b60 = b52-iC35-b23-b7;
z45 = iC45+iC36-b55;
z44 = iC44+iC38-iC0+b58;
z42 = iC42-b58;
z40 = b54-iC26-iC40;
z30 = iC30+b53-iC7;
z29 = iC29+iC35+b54;
z28 = iC28+iC32+iC6-b57;
z23 = iC23+iC22+b56;
z17 = iC17-b60;
z15 = iC15+iC41+b53;
z13 = iC13+b60-iC46-iC19;
z12 = iC12+b56-iC4;
z9 = iC9+b55-iC25;
z5 = iC5+b59;
z2 = b57-iC2;
z1 = iC1+iC10-iC20+b59;
t37 = (z40+z15)*NTH2ROOT2o16;
t36 = (z44-z13)/8;
t35 = (z45-z29)/8;
t34 = (z17+z5)*NTH2ROOT2o16;
t33 = (z12+z9)*NTH2ROOT2o16;
t32 = (z29+z13)*NTH2ROOT2o16;
t31 = (z23-z30)/8;
t29 = (z28+z23)*NTH2ROOT2o16;
t28 = (z28+z1)/8;
t27 = (z44-z45)*NTH2ROOT2o16;
t25 = (z30+z1)*NTH2ROOT2o16;
t23 = (z42-z2)*NTH2ROOT2o16;
oC11 = (z40+z9)/8;
oC10 = (z15-z12)/8;
oC15 = (z42-z17)/8;
oC14 = (z2-z5)/8;
oC6 = (z5+z2)/8+t36-t31;
oC9 = t33-t37;
oC7 = (z42+z17)/8+t35+t28;
b75 = t37-t29+t27;
b76 = t34+t29+t27;
oC8 = t37+t33;
b77 = t32+t33-t25;
b78 = t32+t25+t23;
oC3 = t35-t28+oC11;
oC2 = t36+t31+oC10;
oC13 = t23+t34;
oC12 = t23-t34;
oC1 = b77-b75;
oC0 = b77+b75;
oC5 = b78-b76;
oC4 = b76+b78;

C = [ oC0 oC1 oC2 oC3 ; oC4 oC5 oC6 oC7 ; oC8 oC9 oC10 oC11 ; oC12 oC13 oC14 oC15 ] ;
  end
end
end

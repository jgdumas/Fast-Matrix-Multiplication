function C = DPS48_4_4_4(A, B, nmin, peeling, level)
if nargin < 3, nmin = 4; end    % Threshold to conventional
if nargin < 4, peeling = 1; end % Static (1) or Dynamic (2) peeling
if nargin < 5, level = 8; end   % Verbose level
[m,k] = size(A); [k2,n] = size(B);
if (k2 ~= k), error('Incompatible matrix dimensions.'); end
% Recursively cuts into nmin*4^l x nmin*4^l x nmin*4^l blocks, with decreasing maximal l
if (m<=nmin)||(k<=nmin)||(n<=nmin)||(m<4)||(k<4)||(n<4)
  % fprintf("# MM Direct: %d x %d x %d\n",m,k,n)
  C = A*B;
else
  C = zeros(m,n);
  mu=m-rem(m,4);ku=k-rem(k,4);nu=n-rem(n,4);
  l=ceil(min([log(mu)/log(4),log(ku)/log(4),log(nu)/log(4)]));
  if (peeling == 1)
    l = min([floor(log(m/nmin)/log(4)),floor(log(k/nmin)/log(4)),floor(log(n/nmin)/log(4))]);
    mu=nmin*4^l; ku=nmin*4^l; nu=nmin*4^l;
  end
  if (mu < m) || (ku < k) || (nu < n)
    % fprintf("# Core SubMatrix[%d]: %d x %d x %d\n",l,mu,ku,nu)
    C(1:mu,1:nu)=DPS48_4_4_4(A(1:mu,1:ku),B(1:ku,1:nu),nmin, peeling, level);
    if (m > mu)
      % fprintf("# MM peel m: %d x %d x %d\n",m-mu,k,n)
      C(mu+1:m,1:n)=C(mu+1:m,1:n)+DPS48(A(mu+1:m,1:k),B,nmin, peeling, level);
    end
    if (k > ku) && (mu > 0) && (nu > 0)
      % fprintf("# MM peel k: %d x %d x %d\n",mu,k-ku,nu)
      C(1:mu,1:nu)=C(1:mu,1:nu)+DPS48(A(1:mu,ku+1:k),B(ku+1:k,1:nu),nmin, peeling, level);
    end
    if (n > nu) && (mu > 0)
      % fprintf("# MM peel n: %d x %d x %d\n",mu,k,n-nu)
      C(1:mu,nu+1:n)=C(1:mu,nu+1:n)+DPS48(A(1:mu,1:k),B(1:k,nu+1:n),nmin, peeling, level);
    end
  else
    if l>=level, fprintf("# Core<4;4;4>[%d]: %d x %d x %d\n",l,m,k,n); end

[m,n] = size(A);
m0 = 0; m1 = 1*m/4; m2 = 2*m/4; m3 = 3*m/4; m4 = m;
 r0 = m0+1:m1; r1 = m1+1:m2; r2 = m2+1:m3; r3 = m3+1:m4;
n0 = 0; n1 = 1*n/4; n2 = 2*n/4; n3 = 3*n/4; n4 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4;
t16 = A(r0,c2)+A(r1,c3);
t17 = A(r0,c3)+A(r1,c2);
t18 = A(r0,c1)-A(r1,c0);
t19 = A(r2,c0)-A(r3,c1);
t20 = A(r2,c2)+A(r3,c3);
t21 = A(r2,c3)+A(r3,c2);
t22 = A(r1,c1)-A(r0,c0);
t23 = A(r2,c1)-A(r3,c0);
t24 = A(r0,c2)-A(r1,c2);
t25 = A(r2,c1)-A(r3,c1);
t26 = A(r2,c2)+A(r3,c2);
t27 = A(r2,c0)-A(r3,c0);
t28 = A(r2,c3)+A(r3,c3);
t29 = A(r0,c1)+A(r1,c1);
t30 = A(r0,c0)+A(r1,c0);
t31 = A(r0,c3)-A(r1,c3);
t32 = t23-t19;
t33 = t16+t17;
t34 = t20-t21;
t35 = t22-t18;
t36 = t20+t21;
t37 = t18+t22;
t38 = t16-t17;
t39 = t19+t23;
t40 = t29+t30;
t41 = t25-t27;
t42 = t26-t28;
t43 = t24+t31;
oA8 = t32-t43;
t45 = A(r2,c2)-A(r3,c2);
t46 = A(r2,c0)+A(r3,c0);
t47 = A(r0,c2)+A(r1,c2);
oA34 = t34+t40;
oA27 = t33-t41;
t50 = A(r2,c1)+A(r3,c1);
t51 = A(r0,c1)-A(r1,c1);
t52 = A(r0,c3)+A(r1,c3);
oA24 = t42-t35;
t54 = A(r2,c3)-A(r3,c3);
t55 = A(r0,c0)-A(r1,c0);
t56 = t17+t18;
t57 = t34-t35;
t59 = t37+t32;
t60 = t38+t46+t50;
oA38 = t29-t25;
t63 = t36+t33;
oA2 = t26-t24;
t66 = t36-t33;
oA6 = t28-t31;
oA36 = t25+t29;
oA12 = t24+t26;
t71 = t34+t35;
t72 = t39-t38;
t73 = t16-t22;
oA22 = t28+t31;
t75 = t52-t39-t47;
t76 = t38+t39;
t77 = t37-t32;
t78 = t55+t36-t51;
oA9 = t27+t30;
t80 = t45+t54-t37;
oA42 = t30-t27;
t82 = t19+t20;
t83 = t21+t23;
oA0 = oA27-t80;
oA1 = t27-t55;
oA3 = t42-t33;
oA4 = oA24+t60;
oA5 = t57-t76;
oA7 = t57+t76;
oA10 = t71+t72;
oA11 = t56+t83;
oA13 = t47-t26;
oA14 = oA42-oA2;
oA15 = t72-t71;
oA16 = t40+t32;
oA17 = t77-t66;
oA18 = t56-t83;
oA19 = t66+t77;
oA20 = t24-t45;
oA21 = t73+t82;
oA23 = t78-oA8;
oA25 = oA27+t80;
oA26 = t29+t50;
oA28 = t78+oA8;
oA29 = t28+t52;
oA30 = t25+t51;
oA31 = t73-t82;
oA32 = t60-oA24;
oA33 = t34-t43;
oA35 = t63-t59;
oA37 = oA36+oA22;
oA39 = t35-t41;
oA40 = t59+t63;
oA41 = t31+t54;
oA43 = oA12+oA9;
oA44 = oA34+t75;
oA45 = oA34-t75;
oA46 = t46-t30;
oA47 = oA6-oA38;

[m,n] = size(B);
m0 = 0; m1 = 1*m/4; m2 = 2*m/4; m3 = 3*m/4; m4 = m;
 r0 = m0+1:m1; r1 = m1+1:m2; r2 = m2+1:m3; r3 = m3+1:m4;
n0 = 0; n1 = 1*n/4; n2 = 2*n/4; n3 = 3*n/4; n4 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4;
t16 = B(r0,c0)-B(r0,c3);
t17 = B(r2,c0)-B(r2,c3);
t18 = B(r2,c1)+B(r2,c2);
oB6 = B(r1,c1)-B(r3,c1);
oB15 = t16-t17;
t21 = B(r3,c2)-B(r3,c0);
t22 = B(r0,c1)+B(r0,c2);
oB2 = B(r0,c1)+B(r2,c1);
oB3 = t18-t21;
oB7 = t16+t17;
oB10 = B(r1,c3)-B(r3,c3)+oB6;
oB12 = B(r2,c2)+oB15-B(r0,c2);
oB14 = B(r0,c1)-B(r2,c0);
oB19 = B(r1,c2)-t21-B(r1,c0);
oB35 = t22+t18;
oB38 = B(r3,c0)-B(r1,c0);
oB39 = B(r1,c1)+B(r1,c3)+t16;
oB40 = t22-t18;
oB42 = B(r0,c0)+B(r2,c0);
oB44 = B(r3,c0)-B(r2,c0);
oB47 = B(r1,c1)+B(r3,c0);
v48 = oB19+oB35;
v49 = oB7+oB10;
v50 = oB15-oB44;
v51 = oB39-oB3;
v52 = oB2+oB12;
v53 = v51-v50;
oB31 = v49-v48;
v55 = oB14+oB47;
oB34 = v53*2-oB31;
v57 = v52-oB14*2;
oB24 = v55*2-oB34;
oB16 = oB3-v48;
oB33 = oB39-v49;
v61 = v50-oB40;
v62 = oB14+oB42;
v63 = oB39*2-v49;
v64 = oB47-oB38;
v65 = oB2-oB14;
v66 = v52-v55;
v67 = v57+oB34;
v68 = oB47-oB6;
v69 = v48-oB3*2;
oB8 = v52*2-oB24;
oB25 = oB35-v49+v53+v57;
oB27 = oB34+v57*2;
oB45 = oB10-v53;
oB20 = oB33+v65;
oB13 = v65-oB3;
oB18 = v63-v69;
oB9 = oB42-v57;
oB21 = v49+v48;
oB1 = v62-oB39;
oB0 = v57-v61;
oB41 = v68-oB33;
oB43 = v52-oB14;
oB26 = v64-oB16;
oB5 = v63-oB15;
oB29 = v68-oB3;
oB36 = v67-oB38;
oB46 = v62+oB16;
oB11 = oB31-v51*2;
oB17 = oB40-v69;
oB32 = oB44-v55;
oB28 = v61-v66;
oB30 = oB39-v64;
oB23 = oB19+v53+v66;
oB22 = oB6+v52-oB24;
oB4 = v48+v53-v55-oB7;
oB37 = v67-oB47;

iC0 = DPS48( oA0, oB0, nmin, peeling, level);
iC1 = DPS48( oA1, oB1, nmin, peeling, level);
iC2 = DPS48( oA2, oB2, nmin, peeling, level);
iC3 = DPS48( oA3, oB3, nmin, peeling, level);
iC4 = DPS48( oA4, oB4, nmin, peeling, level);
iC5 = DPS48( oA5, oB5, nmin, peeling, level);
iC6 = DPS48( oA6, oB6, nmin, peeling, level);
iC7 = DPS48( oA7, oB7, nmin, peeling, level);
iC8 = DPS48( oA8, oB8, nmin, peeling, level);
iC9 = DPS48( oA9, oB9, nmin, peeling, level);
iC10 = DPS48( oA10, oB10, nmin, peeling, level);
iC11 = DPS48( oA11, oB11, nmin, peeling, level);
iC12 = DPS48( oA12, oB12, nmin, peeling, level);
iC13 = DPS48( oA13, oB13, nmin, peeling, level);
iC14 = DPS48( oA14, oB14, nmin, peeling, level);
iC15 = DPS48( oA15, oB15, nmin, peeling, level);
iC16 = DPS48( oA16, oB16, nmin, peeling, level);
iC17 = DPS48( oA17, oB17, nmin, peeling, level);
iC18 = DPS48( oA18, oB18, nmin, peeling, level);
iC19 = DPS48( oA19, oB19, nmin, peeling, level);
iC20 = DPS48( oA20, oB20, nmin, peeling, level);
iC21 = DPS48( oA21, oB21, nmin, peeling, level);
iC22 = DPS48( oA22, oB22, nmin, peeling, level);
iC23 = DPS48( oA23, oB23, nmin, peeling, level);
iC24 = DPS48( oA24, oB24, nmin, peeling, level);
iC25 = DPS48( oA25, oB25, nmin, peeling, level);
iC26 = DPS48( oA26, oB26, nmin, peeling, level);
iC27 = DPS48( oA27, oB27, nmin, peeling, level);
iC28 = DPS48( oA28, oB28, nmin, peeling, level);
iC29 = DPS48( oA29, oB29, nmin, peeling, level);
iC30 = DPS48( oA30, oB30, nmin, peeling, level);
iC31 = DPS48( oA31, oB31, nmin, peeling, level);
iC32 = DPS48( oA32, oB32, nmin, peeling, level);
iC33 = DPS48( oA33, oB33, nmin, peeling, level);
iC34 = DPS48( oA34, oB34, nmin, peeling, level);
iC35 = DPS48( oA35, oB35, nmin, peeling, level);
iC36 = DPS48( oA36, oB36, nmin, peeling, level);
iC37 = DPS48( oA37, oB37, nmin, peeling, level);
iC38 = DPS48( oA38, oB38, nmin, peeling, level);
iC39 = DPS48( oA39, oB39, nmin, peeling, level);
iC40 = DPS48( oA40, oB40, nmin, peeling, level);
iC41 = DPS48( oA41, oB41, nmin, peeling, level);
iC42 = DPS48( oA42, oB42, nmin, peeling, level);
iC43 = DPS48( oA43, oB43, nmin, peeling, level);
iC44 = DPS48( oA44, oB44, nmin, peeling, level);
iC45 = DPS48( oA45, oB45, nmin, peeling, level);
iC46 = DPS48( oA46, oB46, nmin, peeling, level);
iC47 = DPS48( oA47, oB47, nmin, peeling, level);

v85 = iC12*4;
b8 = iC44-iC34;
b10 = iC41-iC20-iC33;
v66 = iC11+iC15;
v65 = iC0-iC27;
b16 = iC29+iC13-iC3;
v71 = iC8+iC28;
v73 = (iC46-iC13)*2;
v72 = (iC29+iC26)*2;
v70 = (iC0+iC44)/4;
v69 = (iC45+iC25)/2;
v68 = (iC20-iC1)*2;
v67 = (iC32-iC28)/4;
v62 = (iC41-iC30)*2;
v60 = (iC46+iC16+iC26)/2;
v57 = (iC30+iC1+iC39)/2;
b30 = iC25+iC18+v65;
b31 = v65-iC40*2-v71;
v54 = b16+b10;
v52 = (iC14-iC47+b16-b10)/2-v70;
b38 = (iC47+iC14)/2+v67+v60+v57;
b41 = iC17-iC45+iC40+v66+b8-b30;
b44 = iC43-iC37+v54;
b45 = iC43-iC12+v60-v57+v54/2;
b47 = b44-v69;
z24 = iC24+b31-iC32-v85-b8+(b44-v66)*2;
z21 = iC21+iC25-iC23-iC11+v72+v62+b31;
t41 = (iC42+b38+v70)/2;
t40 = (iC38-v70+b38)/2;
t39 = (iC31+iC23-iC17*2+v73+v71+v68+b30)/8;
t38 = z24/8;
t37 = (iC22+b47-iC12)/2;
t36 = z21/8;
t35 = (iC9+b45)/2;
t34 = (iC6+v52+v67)/2;
t33 = (iC4+v85-iC23-b47*2)/4;
t32 = (iC2-v67+v52)/2;
b57 = (iC19+v73-iC17)/4-t40-t39;
b59 = (iC5+b41)/4+t38;
b60 = t39+t37;
b62 = t35-t38;
b63 = t35-t36;
oC1 = t38+t34;
oC9 = t38-t34;
b64 = (iC35+v72-iC40)/4-t36-t32;
t29 = (z21-z24)/8;
oC8 = t40+b62;
oC0 = b62-t40;
b65 = (iC36+v69-b45)/2+b59;
t22 = t37-b59;
b66 = (v68-iC10-b41)/4-t39-oC1;
b67 = (iC7+iC15+v62)/4+t41-t29;
oC4 = t41+b65;
oC13 = t32-t22;
oC5 = t32+t22;
oC10 = t29-b57;
oC2 = t29+b57;
t17 = t39+b65;
oC12 = t41-b65;
oC11 = t33+b63-b66;
oC3 = b63+b66;
oC14 = b64-t17;
oC6 = b64+t17;
oC15 = t33+b60+b67;
oC7 = b67-b60;

C = [ oC0 oC1 oC2 oC3 ; oC4 oC5 oC6 oC7 ; oC8 oC9 oC10 oC11 ; oC12 oC13 oC14 oC15 ] ;
  end
end
end

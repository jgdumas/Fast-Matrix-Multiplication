function M = DPS48f_ICoB(A, nmin, peeling, level)
NTH2ROOT2once=nthroot(2,2);
NTH2ROOT2o2=nthroot(2,2)/2;
NTH2ROOT2t2o=2/nthroot(2,2);
NTH2ROOT2t1o=1/nthroot(2,2);
NTH2ROOT2o4=nthroot(2,2)/4;
NTH2ROOT2o8=nthroot(2,2)/8;
NTH2ROOT2o16=nthroot(2,2)/16;
NTH2ROOT2o3=nthroot(2,2)/3;
NTH2ROOT2f2o3=nthroot(2,2)*2/3;

  if nargin < 2, nmin = 4; end    % Threshold to conventional
  if nargin < 3, peeling = 1; end % Static (1) or Dynamic (2) peeling
  if nargin < 4, level = 8; end   % Verbose level
[m,n] = size(A);
if (n<=nmin)||(n<4)
   M=A;
else
[m,n] = size(A);
m0 = 0; m1 = m;
 r0 = m0+1:m1;
n0 = 0; n1 = 1*n/47; n2 = 2*n/47; n3 = 3*n/47; n4 = 4*n/47; n5 = 5*n/47; n6 = 6*n/47; n7 = 7*n/47; n8 = 8*n/47; n9 = 9*n/47; n10 = 10*n/47; n11 = 11*n/47; n12 = 12*n/47; n13 = 13*n/47; n14 = 14*n/47; n15 = 15*n/47; n16 = 16*n/47; n17 = 17*n/47; n18 = 18*n/47; n19 = 19*n/47; n20 = 20*n/47; n21 = 21*n/47; n22 = 22*n/47; n23 = 23*n/47; n24 = 24*n/47; n25 = 25*n/47; n26 = 26*n/47; n27 = 27*n/47; n28 = 28*n/47; n29 = 29*n/47; n30 = 30*n/47; n31 = 31*n/47; n32 = 32*n/47; n33 = 33*n/47; n34 = 34*n/47; n35 = 35*n/47; n36 = 36*n/47; n37 = 37*n/47; n38 = 38*n/47; n39 = 39*n/47; n40 = 40*n/47; n41 = 41*n/47; n42 = 42*n/47; n43 = 43*n/47; n44 = 44*n/47; n45 = 45*n/47; n46 = 46*n/47; n47 = n;
 c0 = n0+1:n1; c1 = n1+1:n2; c2 = n2+1:n3; c3 = n3+1:n4; c4 = n4+1:n5; c5 = n5+1:n6; c6 = n6+1:n7; c7 = n7+1:n8; c8 = n8+1:n9; c9 = n9+1:n10; c10 = n10+1:n11; c11 = n11+1:n12; c12 = n12+1:n13; c13 = n13+1:n14; c14 = n14+1:n15; c15 = n15+1:n16; c16 = n16+1:n17; c17 = n17+1:n18; c18 = n18+1:n19; c19 = n19+1:n20; c20 = n20+1:n21; c21 = n21+1:n22; c22 = n22+1:n23; c23 = n23+1:n24; c24 = n24+1:n25; c25 = n25+1:n26; c26 = n26+1:n27; c27 = n27+1:n28; c28 = n28+1:n29; c29 = n29+1:n30; c30 = n30+1:n31; c31 = n31+1:n32; c32 = n32+1:n33; c33 = n33+1:n34; c34 = n34+1:n35; c35 = n35+1:n36; c36 = n36+1:n37; c37 = n37+1:n38; c38 = n38+1:n39; c39 = n39+1:n40; c40 = n40+1:n41; c41 = n41+1:n42; c42 = n42+1:n43; c43 = n43+1:n44; c44 = n44+1:n45; c45 = n45+1:n46; c46 = n46+1:n47;
tA0 = A(r0,c0);
tA1 = A(r0,c1);
tA2 = A(r0,c2);
tA3 = A(r0,c3);
tA4 = A(r0,c4);
tA5 = A(r0,c5);
tA6 = A(r0,c6);
tA7 = A(r0,c7);
tA8 = A(r0,c8);
tA9 = A(r0,c9);
tA10 = A(r0,c10);
tA11 = A(r0,c11);
tA12 = A(r0,c12);
tA13 = A(r0,c13);
tA14 = A(r0,c14);
tA15 = A(r0,c15);
tA16 = A(r0,c16);
tA17 = A(r0,c17);
tA18 = A(r0,c18);
tA19 = A(r0,c19);
tA20 = A(r0,c20);
tA21 = A(r0,c21);
tA22 = A(r0,c22);
tA23 = A(r0,c23);
tA24 = A(r0,c24);
tA25 = A(r0,c25);
tA26 = A(r0,c26);
tA27 = A(r0,c27);
tA28 = A(r0,c28);
tA29 = A(r0,c29);
tA30 = A(r0,c30);
tA31 = A(r0,c31);
tA32 = A(r0,c32);
tA33 = A(r0,c33);
tA34 = A(r0,c34);
tA35 = A(r0,c35);
tA36 = A(r0,c36);
tA37 = A(r0,c37);
tA38 = A(r0,c38);
tA39 = A(r0,c39);
tA40 = A(r0,c40);
tA41 = A(r0,c41);
tA42 = A(r0,c42);
tA43 = A(r0,c43);
tA44 = A(r0,c44);
tA45 = A(r0,c45);
tA46 = A(r0,c46);


iM0 = DPS48f_ICoB( tA0, nmin, peeling, level);
iM1 = DPS48f_ICoB( tA1, nmin, peeling, level);
iM2 = DPS48f_ICoB( tA2, nmin, peeling, level);
iM3 = DPS48f_ICoB( tA3, nmin, peeling, level);
iM4 = DPS48f_ICoB( tA4, nmin, peeling, level);
iM5 = DPS48f_ICoB( tA5, nmin, peeling, level);
iM6 = DPS48f_ICoB( tA6, nmin, peeling, level);
iM7 = DPS48f_ICoB( tA7, nmin, peeling, level);
iM8 = DPS48f_ICoB( tA8, nmin, peeling, level);
iM9 = DPS48f_ICoB( tA9, nmin, peeling, level);
iM10 = DPS48f_ICoB( tA10, nmin, peeling, level);
iM11 = DPS48f_ICoB( tA11, nmin, peeling, level);
iM12 = DPS48f_ICoB( tA12, nmin, peeling, level);
iM13 = DPS48f_ICoB( tA13, nmin, peeling, level);
iM14 = DPS48f_ICoB( tA14, nmin, peeling, level);
iM15 = DPS48f_ICoB( tA15, nmin, peeling, level);
iM16 = DPS48f_ICoB( tA16, nmin, peeling, level);
iM17 = DPS48f_ICoB( tA17, nmin, peeling, level);
iM18 = DPS48f_ICoB( tA18, nmin, peeling, level);
iM19 = DPS48f_ICoB( tA19, nmin, peeling, level);
iM20 = DPS48f_ICoB( tA20, nmin, peeling, level);
iM21 = DPS48f_ICoB( tA21, nmin, peeling, level);
iM22 = DPS48f_ICoB( tA22, nmin, peeling, level);
iM23 = DPS48f_ICoB( tA23, nmin, peeling, level);
iM24 = DPS48f_ICoB( tA24, nmin, peeling, level);
iM25 = DPS48f_ICoB( tA25, nmin, peeling, level);
iM26 = DPS48f_ICoB( tA26, nmin, peeling, level);
iM27 = DPS48f_ICoB( tA27, nmin, peeling, level);
iM28 = DPS48f_ICoB( tA28, nmin, peeling, level);
iM29 = DPS48f_ICoB( tA29, nmin, peeling, level);
iM30 = DPS48f_ICoB( tA30, nmin, peeling, level);
iM31 = DPS48f_ICoB( tA31, nmin, peeling, level);
iM32 = DPS48f_ICoB( tA32, nmin, peeling, level);
iM33 = DPS48f_ICoB( tA33, nmin, peeling, level);
iM34 = DPS48f_ICoB( tA34, nmin, peeling, level);
iM35 = DPS48f_ICoB( tA35, nmin, peeling, level);
iM36 = DPS48f_ICoB( tA36, nmin, peeling, level);
iM37 = DPS48f_ICoB( tA37, nmin, peeling, level);
iM38 = DPS48f_ICoB( tA38, nmin, peeling, level);
iM39 = DPS48f_ICoB( tA39, nmin, peeling, level);
iM40 = DPS48f_ICoB( tA40, nmin, peeling, level);
iM41 = DPS48f_ICoB( tA41, nmin, peeling, level);
iM42 = DPS48f_ICoB( tA42, nmin, peeling, level);
iM43 = DPS48f_ICoB( tA43, nmin, peeling, level);
iM44 = DPS48f_ICoB( tA44, nmin, peeling, level);
iM45 = DPS48f_ICoB( tA45, nmin, peeling, level);
iM46 = DPS48f_ICoB( tA46, nmin, peeling, level);
b7 = iM7-iM5+iM3*2;
v65 = iM22-iM44;
b9 = -iM18-iM1*2;
b11 = -iM21-iM29;
v62 = iM35-iM39;
v66 = iM19-iM28;
b18 = iM8*2+iM2-iM38+iM39-iM10;
v64 = iM8-iM13;
v61 = iM3-iM20;
b20 = iM6-iM16-iM44-iM29*2-iM23;
v63 = iM36+iM15;
b25 = b9-iM31;
b26 = iM28-iM16-iM22+b9;
b32 = iM5-iM35+iM38-iM15-v61*2;
b37 = b11*2-v62+b26;
b38 = iM36+(iM42+iM33)*2+b7+b18;
b39 = iM42-iM46-iM23+b11+v61+b18;
b40 = iM19+(iM43-iM40)*2-b25-b20;
b41 = iM40+iM30-iM1-iM10+v64+b20;
b42 = b32-v65-v64*2;
b47 = v66+b32-b41*2;
b49 = v63+b26+b39*2;
z45 = iM45+v63+b40;
z41 = iM41+iM5-b49;
z37 = iM37+iM7-b47;
z34 = iM34+iM16+iM10*2+b42;
z32 = iM32+b49-iM31;
z27 = iM27+b37-iM23;
z26 = iM26+iM10+b42;
z25 = iM25+b40;
z24 = iM24+v65-iM2;
z17 = iM17+b38;
z14 = iM14+b37-iM38-iM23*2;
z12 = iM12+iM6+v62;
z11 = iM11+iM33-iM38+b7+b41;
z9 = iM9+v66+b38;
z4 = iM4+iM18+b47;
z0 = iM0+b25-iM16-iM43+b39;
t39 = (z41+z14)*NTH2ROOT2o16;
t38 = (-z26-z24)*NTH2ROOT2o16;
t37 = (-z24-z12)/8;
oM12 = (z17-z25)*NTH2ROOT2o16;
t35 = (z27-z26)/8;
oM13 = (z25+z17)*NTH2ROOT2o16;
t32 = (z4-z34)*NTH2ROOT2o16;
t31 = (-z11-z0)/8;
t30 = (z0-z11)/8;
t29 = (z41-z4)/8;
t27 = (z34-z14)/8;
t25 = (-z27-z12)*NTH2ROOT2o16;
b59 = (z37+z9)*NTH2ROOT2o16-z11*NTH2ROOT2o8;
b60 = z0*NTH2ROOT2o8+(z45-z32)*NTH2ROOT2o16;
oM9 = t39+oM12+t32;
t26 = -t31;
oM15 = oM12*NTH2ROOT2t2o+t31;
oM14 = -t30;
t22 = oM13+t29*NTH2ROOT2o2;
b61 = (z32-z37)/8+oM14;
b62 = (z45-z9)/8+t26;
oM10 = t27+t26;
b64 = b59-t38;
b65 = t39+t38+b59;
b66 = b60-t25;
b67 = t25-t32+b60;
oM8 = (z34+z14)*NTH2ROOT2o16+t22;
oM11 = t30+t22*NTH2ROOT2t2o;
oM6 = b62-t35;
oM2 = t35+t27+b62;
oM7 = b61-t37;
oM3 = t37+t29+b61;
oM5 = b64-b66;
oM4 = b64+b66;
oM1 = b65-b67;
oM0 = b67+b65;

M = [ oM0 oM1 oM2 oM3 ; oM4 oM5 oM6 oM7 ; oM8 oM9 oM10 oM11 ; oM12 oM13 oM14 oM15 ] ;
end

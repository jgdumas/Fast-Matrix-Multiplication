# Fast-Matrix-Multiplication library
#   https://github.com/jgdumas/Fast-Matrix-Multiplication
#   Accurate fast matrix multiplications via recursion
#   Authors:
#   [J-G. Dumas, C. Pernet, A. Sedoglavic;
#    Strassen's algorithm is not optimally accurate.
#    https://hal.science/hal-04441653]

# Generation of DPS.m

# Program Automatically obtained with the PLinOpt library
#   https://github.com/jgdumas/plinopt
#   (run this program within the installed 'plinopt' directory)

# DPS.m linear algorithms description is provided via associated
# PLinOpt L (left), R (right), P (product) matrices, which are:
#   left : data/Lo.sms
#   right: data/Ro.sms
#   prod.: data/Po.sms

MMchecker data/Lo.sms data/Ro.sms data/Po.sms 128 3 1013

##########
# Pre-computation of the lhs straight-line program:

optimizer -E -N data/Lo.sms | compacter -s > data/Lo.slp

# 7	additions	instead of 14 	0.564344s (1.90303 cpu) [3]
# 4	multiplications	instead of 19
##########

PMchecker -M data/Lo.sms data/Lo.slp

##########
# Pre-computation of the rhs straight-line program:

optimizer -E -N data/Ro.sms | compacter -s > data/Ro.slp

# 7	additions	instead of 14 	1.16858s (3.85641 cpu) [3]
# 4	multiplications	instead of 19
##########

PMchecker -M data/Ro.sms data/Ro.slp

##########
# Pre-computation of the product straight-line program:

matrix-transpose data/Po.sms | optimizer -E -N | transpozer | compacter -s > data/Po.slp

# 10	additions (7+3)	instead of 17	1.30323s (3.98992 cpu) [3]
# 4	multiplications	instead of 19
##########

PMchecker -M data/Po.sms data/Po.slp

##########
# Gathering of all straight-line program/variables to produce a Matlab program:

MM.rpl data/Lo.slp data/Ro.slp data/Po.slp 2 2 2 7 data/DPS
##########

##########
# 1013 is a placeholder for sqrt(3)

sed -i 's/2026/2\*1013/g;s/1013/sqrt(3)/g' data/DPS_2_2_2.m
##########

#####################################################################

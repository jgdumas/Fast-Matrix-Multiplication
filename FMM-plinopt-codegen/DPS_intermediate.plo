#####################################################################
# Fast-Matrix-Multiplication library
#   https://github.com/jgdumas/Fast-Matrix-Multiplication
#   Accurate fast matrix multiplications via 2x2 recursion
#   Authors:
#   [J-G. Dumas, C. Pernet, A. Sedoglavic;
#    Strassen's algorithm is not optimally accurate.
#    https://hal.science/hal-04441653]

# Generation of DPS_intermediate.m

# Program Automatically obtained with the PLinOpt library
#   https://github.com/jgdumas/plinopt
#   (run this program within the installed 'plinopt' directory)

# DPS_intermediate.m linear algorithms description is provided via associated
# PLinOpt L (left), R (right), P (product) matrices, which are:
#   left : data/Lj.sms
#   right: data/Rj.sms
#   prod.: data/Pj.sms

MMchecker data/Lj.sms data/Rj.sms data/Pj.sms

##########
# Pre-computation of the lhs:

optimizer -E -N data/Lj.sms | compacter -s > data/Lj.slp

# 7	additions	instead of 14 	0.739764s (2.45833 cpu) [3]
# 6	multiplications	instead of 20
##########

PMchecker -M data/Lj.sms data/Lj.slp

##########
# Pre-computation of the rhs:

optimizer -E -N data/Rj.sms | compacter -s > data/Rj.slp

# 7	additions	instead of 14 	0.497288s (1.84279 cpu) [3]
# 7	multiplications	instead of 20
##########

PMchecker -M data/Rj.sms data/Rj.slp

##########
# Pre-computation of the product:

matrix-transpose data/Pj.sms | optimizer -E -N | transpozer | compacter -s > data/Pj.slp

# 10	additions (7+3)
# 5	multiplications
##########

PMchecker -M data/Pj.sms data/Pj.slp

##########
# Gathering of all straight-line program/variables to produce a Matlab prgram:

MM.rpl data/Lj.slp data/Rj.slp data/Pj.slp 2 2 2 7 data/DPS_intermediate

##########


#####################################################################

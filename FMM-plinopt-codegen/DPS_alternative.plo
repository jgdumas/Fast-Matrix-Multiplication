#####################################################################
# Fast-Matrix-Multiplication library
#   https://github.com/jgdumas/Fast-Matrix-Multiplication
#   Accurate fast matrix multiplications via 2x2 recursion
#   Authors:
#   [J-G. Dumas, C. Pernet, A. Sedoglavic;
#    Strassen's algorithm is not optimally accurate.
#    https://hal.science/hal-04441653]

# Generation of DPS_alternative.m

# Automatically obtained with the PLinOpt library
#   https://github.com/jgdumas/plinopt

# Associated L,R,P matrices with PLinOpt are:
#   left : data/La.sms
#   right: data/Ra.sms
#   prod.: data/Pa.sms

##########
# Pre-computation of the lhs straight-line program:
optimizer -E -N data/La.sms| compacter -s > data/La.slp
# 3	additions	instead of 3 	0.0868759s (0.327302 cpu) [3]
# 0	multiplications	instead of 0

##########
# Pre-computation of the rhs straight-line program:
optimizer -E -N data/Ra.sms| compacter -s > data/Ra.slp
# 3	additions	instead of 3 	0.0858929s (0.326958 cpu) [3]
# 0	multiplications	instead of 0

##########
# Pre-computation of the product straight-line program:
matrix-transpose data/Pa.sms | optimizer -E -N | transpozer | compacter -s > data/Pa.slp
# 6	additions (3+3)
# 0	multiplications

##########
# Gathering of all straight-line program/variables to produce a Matlab prgram:
MM.rpl data/La.slp data/Ra.slp data/Pa.slp 2 2 2 7 data/DPS_mul

#####################################################################
